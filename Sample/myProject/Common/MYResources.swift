//
//  MYResources.swift
//
//  Generated by CodeGen (by Some1)
//  Copyright Â© 2018 GMO-Z.com RunSystem. All rights reserved.
//
//  THIS FILE IS AUTO-GENERATED. DO NOT EDIT!

import Foundation

struct MYResources {

    struct Resource {

        let name: String
        let type: String?
        let folder: String?

        init(inputName: String, inputType: String?) {
            name = inputName
            type = inputType
            folder = nil
        }

        init(inputName: String, inputType: String?, inputFolder: String) {
            name = inputName
            type = inputType
            folder = inputFolder
        }

        var path: String {
            return Bundle.main.path(forResource: name, ofType: type, inDirectory: folder)!
        }

        var url: URL {
            return Bundle.main.url(forResource: name, withExtension: type, subdirectory: folder)!
        }

    }

    static var dataJson: Resource {
        return Resource(inputName: "data", inputType: "json")
    }

    static var listPlist: Resource {
        return Resource(inputName: "list", inputType: "plist")
    }

    static var textTxt: Resource {
        return Resource(inputName: "text", inputType: "txt")
    }

    struct Data {

        static var dataJson: Resource {
            return Resource(inputName: "data", inputType: "json", inputFolder: "Data")
        }

        static var listPlist: Resource {
            return Resource(inputName: "list", inputType: "plist", inputFolder: "Data")
        }

        static var textTxt: Resource {
            return Resource(inputName: "text", inputType: "txt", inputFolder: "Data")
        }

        struct SubData {

            static var dataJson: Resource {
                return Resource(inputName: "DaTa", inputType: "json", inputFolder: "Data/SubData")
            }

            static var listPlist: Resource {
                return Resource(inputName: "LIST", inputType: "plist", inputFolder: "Data/SubData")
            }

            static var textTxt: Resource {
                return Resource(inputName: "text", inputType: "txt", inputFolder: "Data/SubData")
            }

        }

    }

}
